//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.ROSTCPEndpoint
{
    [Serializable]
    public class ControllerInputMsg : Message
    {
        public const string k_RosMessageName = "ROS_TCP_Endpoint_msgs/ControllerInput";
        public override string RosMessageName => k_RosMessageName;

        public bool primaryButton;
        public bool secondaryButton;
        public bool triggerButton;
        public float triggerValue;
        public bool gripButton;
        public bool joystickButton;
        public float joystick_pos_x;
        public float joystick_pos_y;
        public float controller_pos_x;
        public float controller_pos_y;
        public float controller_pos_z;
        public float controller_rot_x;
        public float controller_rot_y;
        public float controller_rot_z;
        public float controller_rot_w;

        public ControllerInputMsg()
        {
            this.primaryButton = false;
            this.secondaryButton = false;
            this.triggerButton = false;
            this.triggerValue = 0.0f;
            this.gripButton = false;
            this.joystickButton = false;
            this.joystick_pos_x = 0.0f;
            this.joystick_pos_y = 0.0f;
            this.controller_pos_x = 0.0f;
            this.controller_pos_y = 0.0f;
            this.controller_pos_z = 0.0f;
            this.controller_rot_x = 0.0f;
            this.controller_rot_y = 0.0f;
            this.controller_rot_z = 0.0f;
            this.controller_rot_w = 0.0f;
        }

        public ControllerInputMsg(bool primaryButton, bool secondaryButton, bool triggerButton, float triggerValue, bool gripButton, bool joystickButton, float joystick_pos_x, float joystick_pos_y, float controller_pos_x, float controller_pos_y, float controller_pos_z, float controller_rot_x, float controller_rot_y, float controller_rot_z, float controller_rot_w)
        {
            this.primaryButton = primaryButton;
            this.secondaryButton = secondaryButton;
            this.triggerButton = triggerButton;
            this.triggerValue = triggerValue;
            this.gripButton = gripButton;
            this.joystickButton = joystickButton;
            this.joystick_pos_x = joystick_pos_x;
            this.joystick_pos_y = joystick_pos_y;
            this.controller_pos_x = controller_pos_x;
            this.controller_pos_y = controller_pos_y;
            this.controller_pos_z = controller_pos_z;
            this.controller_rot_x = controller_rot_x;
            this.controller_rot_y = controller_rot_y;
            this.controller_rot_z = controller_rot_z;
            this.controller_rot_w = controller_rot_w;
        }

        public static ControllerInputMsg Deserialize(MessageDeserializer deserializer) => new ControllerInputMsg(deserializer);

        private ControllerInputMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.primaryButton);
            deserializer.Read(out this.secondaryButton);
            deserializer.Read(out this.triggerButton);
            deserializer.Read(out this.triggerValue);
            deserializer.Read(out this.gripButton);
            deserializer.Read(out this.joystickButton);
            deserializer.Read(out this.joystick_pos_x);
            deserializer.Read(out this.joystick_pos_y);
            deserializer.Read(out this.controller_pos_x);
            deserializer.Read(out this.controller_pos_y);
            deserializer.Read(out this.controller_pos_z);
            deserializer.Read(out this.controller_rot_x);
            deserializer.Read(out this.controller_rot_y);
            deserializer.Read(out this.controller_rot_z);
            deserializer.Read(out this.controller_rot_w);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.primaryButton);
            serializer.Write(this.secondaryButton);
            serializer.Write(this.triggerButton);
            serializer.Write(this.triggerValue);
            serializer.Write(this.gripButton);
            serializer.Write(this.joystickButton);
            serializer.Write(this.joystick_pos_x);
            serializer.Write(this.joystick_pos_y);
            serializer.Write(this.controller_pos_x);
            serializer.Write(this.controller_pos_y);
            serializer.Write(this.controller_pos_z);
            serializer.Write(this.controller_rot_x);
            serializer.Write(this.controller_rot_y);
            serializer.Write(this.controller_rot_z);
            serializer.Write(this.controller_rot_w);
        }

        public override string ToString()
        {
            return "ControllerInputMsg: " +
            "\nprimaryButton: " + primaryButton.ToString() +
            "\nsecondaryButton: " + secondaryButton.ToString() +
            "\ntriggerButton: " + triggerButton.ToString() +
            "\ntriggerValue: " + triggerValue.ToString() +
            "\ngripButton: " + gripButton.ToString() +
            "\njoystickButton: " + joystickButton.ToString() +
            "\njoystick_pos_x: " + joystick_pos_x.ToString() +
            "\njoystick_pos_y: " + joystick_pos_y.ToString() +
            "\ncontroller_pos_x: " + controller_pos_x.ToString() +
            "\ncontroller_pos_y: " + controller_pos_y.ToString() +
            "\ncontroller_pos_z: " + controller_pos_z.ToString() +
            "\ncontroller_rot_x: " + controller_rot_x.ToString() +
            "\ncontroller_rot_y: " + controller_rot_y.ToString() +
            "\ncontroller_rot_z: " + controller_rot_z.ToString() +
            "\ncontroller_rot_w: " + controller_rot_w.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
