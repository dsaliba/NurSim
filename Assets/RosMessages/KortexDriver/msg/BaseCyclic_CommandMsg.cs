//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.KortexDriver
{
    [Serializable]
    public class BaseCyclic_CommandMsg : Message
    {
        public const string k_RosMessageName = "kortex_driver/BaseCyclic_Command";
        public override string RosMessageName => k_RosMessageName;

        public uint frame_id;
        public ActuatorCommandMsg[] actuators;
        public InterconnectCyclic_CommandMsg interconnect;

        public BaseCyclic_CommandMsg()
        {
            this.frame_id = 0;
            this.actuators = new ActuatorCommandMsg[0];
            this.interconnect = new InterconnectCyclic_CommandMsg();
        }

        public BaseCyclic_CommandMsg(uint frame_id, ActuatorCommandMsg[] actuators, InterconnectCyclic_CommandMsg interconnect)
        {
            this.frame_id = frame_id;
            this.actuators = actuators;
            this.interconnect = interconnect;
        }

        public static BaseCyclic_CommandMsg Deserialize(MessageDeserializer deserializer) => new BaseCyclic_CommandMsg(deserializer);

        private BaseCyclic_CommandMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.frame_id);
            deserializer.Read(out this.actuators, ActuatorCommandMsg.Deserialize, deserializer.ReadLength());
            this.interconnect = InterconnectCyclic_CommandMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.frame_id);
            serializer.WriteLength(this.actuators);
            serializer.Write(this.actuators);
            serializer.Write(this.interconnect);
        }

        public override string ToString()
        {
            return "BaseCyclic_CommandMsg: " +
            "\nframe_id: " + frame_id.ToString() +
            "\nactuators: " + System.String.Join(", ", actuators.ToList()) +
            "\ninterconnect: " + interconnect.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
