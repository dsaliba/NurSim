//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.KortexDriver
{
    [Serializable]
    public class BaseFeedbackMsg : Message
    {
        public const string k_RosMessageName = "kortex_driver/BaseFeedback";
        public override string RosMessageName => k_RosMessageName;

        public uint active_state_connection_identifier;
        public uint active_state;
        public float arm_voltage;
        public float arm_current;
        public float temperature_cpu;
        public float temperature_ambient;
        public float imu_acceleration_x;
        public float imu_acceleration_y;
        public float imu_acceleration_z;
        public float imu_angular_velocity_x;
        public float imu_angular_velocity_y;
        public float imu_angular_velocity_z;
        public float tool_pose_x;
        public float tool_pose_y;
        public float tool_pose_z;
        public float tool_pose_theta_x;
        public float tool_pose_theta_y;
        public float tool_pose_theta_z;
        public float tool_twist_linear_x;
        public float tool_twist_linear_y;
        public float tool_twist_linear_z;
        public float tool_twist_angular_x;
        public float tool_twist_angular_y;
        public float tool_twist_angular_z;
        public float tool_external_wrench_force_x;
        public float tool_external_wrench_force_y;
        public float tool_external_wrench_force_z;
        public float tool_external_wrench_torque_x;
        public float tool_external_wrench_torque_y;
        public float tool_external_wrench_torque_z;
        public uint fault_bank_a;
        public uint fault_bank_b;
        public uint warning_bank_a;
        public uint warning_bank_b;
        public float commanded_tool_pose_x;
        public float commanded_tool_pose_y;
        public float commanded_tool_pose_z;
        public float commanded_tool_pose_theta_x;
        public float commanded_tool_pose_theta_y;
        public float commanded_tool_pose_theta_z;

        public BaseFeedbackMsg()
        {
            this.active_state_connection_identifier = 0;
            this.active_state = 0;
            this.arm_voltage = 0.0f;
            this.arm_current = 0.0f;
            this.temperature_cpu = 0.0f;
            this.temperature_ambient = 0.0f;
            this.imu_acceleration_x = 0.0f;
            this.imu_acceleration_y = 0.0f;
            this.imu_acceleration_z = 0.0f;
            this.imu_angular_velocity_x = 0.0f;
            this.imu_angular_velocity_y = 0.0f;
            this.imu_angular_velocity_z = 0.0f;
            this.tool_pose_x = 0.0f;
            this.tool_pose_y = 0.0f;
            this.tool_pose_z = 0.0f;
            this.tool_pose_theta_x = 0.0f;
            this.tool_pose_theta_y = 0.0f;
            this.tool_pose_theta_z = 0.0f;
            this.tool_twist_linear_x = 0.0f;
            this.tool_twist_linear_y = 0.0f;
            this.tool_twist_linear_z = 0.0f;
            this.tool_twist_angular_x = 0.0f;
            this.tool_twist_angular_y = 0.0f;
            this.tool_twist_angular_z = 0.0f;
            this.tool_external_wrench_force_x = 0.0f;
            this.tool_external_wrench_force_y = 0.0f;
            this.tool_external_wrench_force_z = 0.0f;
            this.tool_external_wrench_torque_x = 0.0f;
            this.tool_external_wrench_torque_y = 0.0f;
            this.tool_external_wrench_torque_z = 0.0f;
            this.fault_bank_a = 0;
            this.fault_bank_b = 0;
            this.warning_bank_a = 0;
            this.warning_bank_b = 0;
            this.commanded_tool_pose_x = 0.0f;
            this.commanded_tool_pose_y = 0.0f;
            this.commanded_tool_pose_z = 0.0f;
            this.commanded_tool_pose_theta_x = 0.0f;
            this.commanded_tool_pose_theta_y = 0.0f;
            this.commanded_tool_pose_theta_z = 0.0f;
        }

        public BaseFeedbackMsg(uint active_state_connection_identifier, uint active_state, float arm_voltage, float arm_current, float temperature_cpu, float temperature_ambient, float imu_acceleration_x, float imu_acceleration_y, float imu_acceleration_z, float imu_angular_velocity_x, float imu_angular_velocity_y, float imu_angular_velocity_z, float tool_pose_x, float tool_pose_y, float tool_pose_z, float tool_pose_theta_x, float tool_pose_theta_y, float tool_pose_theta_z, float tool_twist_linear_x, float tool_twist_linear_y, float tool_twist_linear_z, float tool_twist_angular_x, float tool_twist_angular_y, float tool_twist_angular_z, float tool_external_wrench_force_x, float tool_external_wrench_force_y, float tool_external_wrench_force_z, float tool_external_wrench_torque_x, float tool_external_wrench_torque_y, float tool_external_wrench_torque_z, uint fault_bank_a, uint fault_bank_b, uint warning_bank_a, uint warning_bank_b, float commanded_tool_pose_x, float commanded_tool_pose_y, float commanded_tool_pose_z, float commanded_tool_pose_theta_x, float commanded_tool_pose_theta_y, float commanded_tool_pose_theta_z)
        {
            this.active_state_connection_identifier = active_state_connection_identifier;
            this.active_state = active_state;
            this.arm_voltage = arm_voltage;
            this.arm_current = arm_current;
            this.temperature_cpu = temperature_cpu;
            this.temperature_ambient = temperature_ambient;
            this.imu_acceleration_x = imu_acceleration_x;
            this.imu_acceleration_y = imu_acceleration_y;
            this.imu_acceleration_z = imu_acceleration_z;
            this.imu_angular_velocity_x = imu_angular_velocity_x;
            this.imu_angular_velocity_y = imu_angular_velocity_y;
            this.imu_angular_velocity_z = imu_angular_velocity_z;
            this.tool_pose_x = tool_pose_x;
            this.tool_pose_y = tool_pose_y;
            this.tool_pose_z = tool_pose_z;
            this.tool_pose_theta_x = tool_pose_theta_x;
            this.tool_pose_theta_y = tool_pose_theta_y;
            this.tool_pose_theta_z = tool_pose_theta_z;
            this.tool_twist_linear_x = tool_twist_linear_x;
            this.tool_twist_linear_y = tool_twist_linear_y;
            this.tool_twist_linear_z = tool_twist_linear_z;
            this.tool_twist_angular_x = tool_twist_angular_x;
            this.tool_twist_angular_y = tool_twist_angular_y;
            this.tool_twist_angular_z = tool_twist_angular_z;
            this.tool_external_wrench_force_x = tool_external_wrench_force_x;
            this.tool_external_wrench_force_y = tool_external_wrench_force_y;
            this.tool_external_wrench_force_z = tool_external_wrench_force_z;
            this.tool_external_wrench_torque_x = tool_external_wrench_torque_x;
            this.tool_external_wrench_torque_y = tool_external_wrench_torque_y;
            this.tool_external_wrench_torque_z = tool_external_wrench_torque_z;
            this.fault_bank_a = fault_bank_a;
            this.fault_bank_b = fault_bank_b;
            this.warning_bank_a = warning_bank_a;
            this.warning_bank_b = warning_bank_b;
            this.commanded_tool_pose_x = commanded_tool_pose_x;
            this.commanded_tool_pose_y = commanded_tool_pose_y;
            this.commanded_tool_pose_z = commanded_tool_pose_z;
            this.commanded_tool_pose_theta_x = commanded_tool_pose_theta_x;
            this.commanded_tool_pose_theta_y = commanded_tool_pose_theta_y;
            this.commanded_tool_pose_theta_z = commanded_tool_pose_theta_z;
        }

        public static BaseFeedbackMsg Deserialize(MessageDeserializer deserializer) => new BaseFeedbackMsg(deserializer);

        private BaseFeedbackMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.active_state_connection_identifier);
            deserializer.Read(out this.active_state);
            deserializer.Read(out this.arm_voltage);
            deserializer.Read(out this.arm_current);
            deserializer.Read(out this.temperature_cpu);
            deserializer.Read(out this.temperature_ambient);
            deserializer.Read(out this.imu_acceleration_x);
            deserializer.Read(out this.imu_acceleration_y);
            deserializer.Read(out this.imu_acceleration_z);
            deserializer.Read(out this.imu_angular_velocity_x);
            deserializer.Read(out this.imu_angular_velocity_y);
            deserializer.Read(out this.imu_angular_velocity_z);
            deserializer.Read(out this.tool_pose_x);
            deserializer.Read(out this.tool_pose_y);
            deserializer.Read(out this.tool_pose_z);
            deserializer.Read(out this.tool_pose_theta_x);
            deserializer.Read(out this.tool_pose_theta_y);
            deserializer.Read(out this.tool_pose_theta_z);
            deserializer.Read(out this.tool_twist_linear_x);
            deserializer.Read(out this.tool_twist_linear_y);
            deserializer.Read(out this.tool_twist_linear_z);
            deserializer.Read(out this.tool_twist_angular_x);
            deserializer.Read(out this.tool_twist_angular_y);
            deserializer.Read(out this.tool_twist_angular_z);
            deserializer.Read(out this.tool_external_wrench_force_x);
            deserializer.Read(out this.tool_external_wrench_force_y);
            deserializer.Read(out this.tool_external_wrench_force_z);
            deserializer.Read(out this.tool_external_wrench_torque_x);
            deserializer.Read(out this.tool_external_wrench_torque_y);
            deserializer.Read(out this.tool_external_wrench_torque_z);
            deserializer.Read(out this.fault_bank_a);
            deserializer.Read(out this.fault_bank_b);
            deserializer.Read(out this.warning_bank_a);
            deserializer.Read(out this.warning_bank_b);
            deserializer.Read(out this.commanded_tool_pose_x);
            deserializer.Read(out this.commanded_tool_pose_y);
            deserializer.Read(out this.commanded_tool_pose_z);
            deserializer.Read(out this.commanded_tool_pose_theta_x);
            deserializer.Read(out this.commanded_tool_pose_theta_y);
            deserializer.Read(out this.commanded_tool_pose_theta_z);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.active_state_connection_identifier);
            serializer.Write(this.active_state);
            serializer.Write(this.arm_voltage);
            serializer.Write(this.arm_current);
            serializer.Write(this.temperature_cpu);
            serializer.Write(this.temperature_ambient);
            serializer.Write(this.imu_acceleration_x);
            serializer.Write(this.imu_acceleration_y);
            serializer.Write(this.imu_acceleration_z);
            serializer.Write(this.imu_angular_velocity_x);
            serializer.Write(this.imu_angular_velocity_y);
            serializer.Write(this.imu_angular_velocity_z);
            serializer.Write(this.tool_pose_x);
            serializer.Write(this.tool_pose_y);
            serializer.Write(this.tool_pose_z);
            serializer.Write(this.tool_pose_theta_x);
            serializer.Write(this.tool_pose_theta_y);
            serializer.Write(this.tool_pose_theta_z);
            serializer.Write(this.tool_twist_linear_x);
            serializer.Write(this.tool_twist_linear_y);
            serializer.Write(this.tool_twist_linear_z);
            serializer.Write(this.tool_twist_angular_x);
            serializer.Write(this.tool_twist_angular_y);
            serializer.Write(this.tool_twist_angular_z);
            serializer.Write(this.tool_external_wrench_force_x);
            serializer.Write(this.tool_external_wrench_force_y);
            serializer.Write(this.tool_external_wrench_force_z);
            serializer.Write(this.tool_external_wrench_torque_x);
            serializer.Write(this.tool_external_wrench_torque_y);
            serializer.Write(this.tool_external_wrench_torque_z);
            serializer.Write(this.fault_bank_a);
            serializer.Write(this.fault_bank_b);
            serializer.Write(this.warning_bank_a);
            serializer.Write(this.warning_bank_b);
            serializer.Write(this.commanded_tool_pose_x);
            serializer.Write(this.commanded_tool_pose_y);
            serializer.Write(this.commanded_tool_pose_z);
            serializer.Write(this.commanded_tool_pose_theta_x);
            serializer.Write(this.commanded_tool_pose_theta_y);
            serializer.Write(this.commanded_tool_pose_theta_z);
        }

        public override string ToString()
        {
            return "BaseFeedbackMsg: " +
            "\nactive_state_connection_identifier: " + active_state_connection_identifier.ToString() +
            "\nactive_state: " + active_state.ToString() +
            "\narm_voltage: " + arm_voltage.ToString() +
            "\narm_current: " + arm_current.ToString() +
            "\ntemperature_cpu: " + temperature_cpu.ToString() +
            "\ntemperature_ambient: " + temperature_ambient.ToString() +
            "\nimu_acceleration_x: " + imu_acceleration_x.ToString() +
            "\nimu_acceleration_y: " + imu_acceleration_y.ToString() +
            "\nimu_acceleration_z: " + imu_acceleration_z.ToString() +
            "\nimu_angular_velocity_x: " + imu_angular_velocity_x.ToString() +
            "\nimu_angular_velocity_y: " + imu_angular_velocity_y.ToString() +
            "\nimu_angular_velocity_z: " + imu_angular_velocity_z.ToString() +
            "\ntool_pose_x: " + tool_pose_x.ToString() +
            "\ntool_pose_y: " + tool_pose_y.ToString() +
            "\ntool_pose_z: " + tool_pose_z.ToString() +
            "\ntool_pose_theta_x: " + tool_pose_theta_x.ToString() +
            "\ntool_pose_theta_y: " + tool_pose_theta_y.ToString() +
            "\ntool_pose_theta_z: " + tool_pose_theta_z.ToString() +
            "\ntool_twist_linear_x: " + tool_twist_linear_x.ToString() +
            "\ntool_twist_linear_y: " + tool_twist_linear_y.ToString() +
            "\ntool_twist_linear_z: " + tool_twist_linear_z.ToString() +
            "\ntool_twist_angular_x: " + tool_twist_angular_x.ToString() +
            "\ntool_twist_angular_y: " + tool_twist_angular_y.ToString() +
            "\ntool_twist_angular_z: " + tool_twist_angular_z.ToString() +
            "\ntool_external_wrench_force_x: " + tool_external_wrench_force_x.ToString() +
            "\ntool_external_wrench_force_y: " + tool_external_wrench_force_y.ToString() +
            "\ntool_external_wrench_force_z: " + tool_external_wrench_force_z.ToString() +
            "\ntool_external_wrench_torque_x: " + tool_external_wrench_torque_x.ToString() +
            "\ntool_external_wrench_torque_y: " + tool_external_wrench_torque_y.ToString() +
            "\ntool_external_wrench_torque_z: " + tool_external_wrench_torque_z.ToString() +
            "\nfault_bank_a: " + fault_bank_a.ToString() +
            "\nfault_bank_b: " + fault_bank_b.ToString() +
            "\nwarning_bank_a: " + warning_bank_a.ToString() +
            "\nwarning_bank_b: " + warning_bank_b.ToString() +
            "\ncommanded_tool_pose_x: " + commanded_tool_pose_x.ToString() +
            "\ncommanded_tool_pose_y: " + commanded_tool_pose_y.ToString() +
            "\ncommanded_tool_pose_z: " + commanded_tool_pose_z.ToString() +
            "\ncommanded_tool_pose_theta_x: " + commanded_tool_pose_theta_x.ToString() +
            "\ncommanded_tool_pose_theta_y: " + commanded_tool_pose_theta_y.ToString() +
            "\ncommanded_tool_pose_theta_z: " + commanded_tool_pose_theta_z.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
