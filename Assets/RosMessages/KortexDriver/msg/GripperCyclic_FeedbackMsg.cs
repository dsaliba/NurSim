//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.KortexDriver
{
    [Serializable]
    public class GripperCyclic_FeedbackMsg : Message
    {
        public const string k_RosMessageName = "kortex_driver/GripperCyclic_Feedback";
        public override string RosMessageName => k_RosMessageName;

        public GripperCyclic_MessageIdMsg feedback_id;
        public uint status_flags;
        public uint fault_bank_a;
        public uint fault_bank_b;
        public uint warning_bank_a;
        public uint warning_bank_b;
        public MotorFeedbackMsg[] motor;

        public GripperCyclic_FeedbackMsg()
        {
            this.feedback_id = new GripperCyclic_MessageIdMsg();
            this.status_flags = 0;
            this.fault_bank_a = 0;
            this.fault_bank_b = 0;
            this.warning_bank_a = 0;
            this.warning_bank_b = 0;
            this.motor = new MotorFeedbackMsg[0];
        }

        public GripperCyclic_FeedbackMsg(GripperCyclic_MessageIdMsg feedback_id, uint status_flags, uint fault_bank_a, uint fault_bank_b, uint warning_bank_a, uint warning_bank_b, MotorFeedbackMsg[] motor)
        {
            this.feedback_id = feedback_id;
            this.status_flags = status_flags;
            this.fault_bank_a = fault_bank_a;
            this.fault_bank_b = fault_bank_b;
            this.warning_bank_a = warning_bank_a;
            this.warning_bank_b = warning_bank_b;
            this.motor = motor;
        }

        public static GripperCyclic_FeedbackMsg Deserialize(MessageDeserializer deserializer) => new GripperCyclic_FeedbackMsg(deserializer);

        private GripperCyclic_FeedbackMsg(MessageDeserializer deserializer)
        {
            this.feedback_id = GripperCyclic_MessageIdMsg.Deserialize(deserializer);
            deserializer.Read(out this.status_flags);
            deserializer.Read(out this.fault_bank_a);
            deserializer.Read(out this.fault_bank_b);
            deserializer.Read(out this.warning_bank_a);
            deserializer.Read(out this.warning_bank_b);
            deserializer.Read(out this.motor, MotorFeedbackMsg.Deserialize, deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.feedback_id);
            serializer.Write(this.status_flags);
            serializer.Write(this.fault_bank_a);
            serializer.Write(this.fault_bank_b);
            serializer.Write(this.warning_bank_a);
            serializer.Write(this.warning_bank_b);
            serializer.WriteLength(this.motor);
            serializer.Write(this.motor);
        }

        public override string ToString()
        {
            return "GripperCyclic_FeedbackMsg: " +
            "\nfeedback_id: " + feedback_id.ToString() +
            "\nstatus_flags: " + status_flags.ToString() +
            "\nfault_bank_a: " + fault_bank_a.ToString() +
            "\nfault_bank_b: " + fault_bank_b.ToString() +
            "\nwarning_bank_a: " + warning_bank_a.ToString() +
            "\nwarning_bank_b: " + warning_bank_b.ToString() +
            "\nmotor: " + System.String.Join(", ", motor.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
